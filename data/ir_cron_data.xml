<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <!-- Cron Jobs for Brevo Synchronization -->
    <record id="ir_cron_brevo_contact_sync" model="ir.cron">
        <field name="name">Brevo Contact Sync</field>
        <field name="model_id" ref="model_brevo_config"/>
        <field name="state">code</field>
        <field name="code">
# Get all active configurations
configs = env['brevo.config'].search([('active', '=', True)])

for config in configs:
    try:
        from ..services.brevo_sync_service import BrevoSyncService
        sync_service = BrevoSyncService(config)
        
        # Sync contacts
        result = sync_service.sync_contacts()
        
        if result.get('success'):
            config.sync_status = 'success'
            config.error_message = False
        else:
            config.sync_status = 'error'
            config.error_message = result.get('error', 'Unknown error')
            
    except Exception as e:
        config.sync_status = 'error'
        config.error_message = str(e)
        _logger.error(f"Brevo contact sync cron failed for config {config.id}: {str(e)}")
        </field>
        <field name="interval_number">15</field>
        <field name="interval_type">minutes</field>
        <field name="numbercall">-1</field>
        <field name="active">True</field>
        <field name="user_id" ref="base.user_root"/>
    </record>

    <record id="ir_cron_brevo_list_sync" model="ir.cron">
        <field name="name">Brevo List Sync</field>
        <field name="model_id" ref="model_brevo_config"/>
        <field name="state">code</field>
        <field name="code">
# Get all active configurations
configs = env['brevo.config'].search([('active', '=', True)])

for config in configs:
    try:
        from ..services.brevo_sync_service import BrevoSyncService
        sync_service = BrevoSyncService(config)
        
        # Sync lists
        result = sync_service.sync_lists()
        
        if result.get('success'):
            config.sync_status = 'success'
            config.error_message = False
        else:
            config.sync_status = 'error'
            config.error_message = result.get('error', 'Unknown error')
            
    except Exception as e:
        config.sync_status = 'error'
        config.error_message = str(e)
        _logger.error(f"Brevo list sync cron failed for config {config.id}: {str(e)}")
        </field>
        <field name="interval_number">30</field>
        <field name="interval_type">minutes</field>
        <field name="numbercall">-1</field>
        <field name="active">True</field>
        <field name="user_id" ref="base.user_root"/>
    </record>

    <record id="ir_cron_brevo_cleanup_logs" model="ir.cron">
        <field name="name">Brevo Log Cleanup</field>
        <field name="model_id" ref="model_brevo_sync_log"/>
        <field name="state">code</field>
        <field name="code">
# Clean up old sync logs (keep error logs longer)
logs = env['brevo.sync.log']
logs.cleanup_old_logs(days=30)
        </field>
        <field name="interval_number">1</field>
        <field name="interval_type">days</field>
        <field name="numbercall">-1</field>
        <field name="active">True</field>
        <field name="user_id" ref="base.user_root"/>
    </record>

</odoo>
