<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <!-- Cron Jobs for Brevo Synchronization -->
    <record id="ir_cron_brevo_contact_sync" model="ir.cron">
        <field name="name">Brevo Contact Sync</field>
        <field name="model_id" ref="model_brevo_config"/>
        <field name="state">code</field>
        <field name="code">
# Get all active configurations and trigger sync
configs = env['brevo.config'].search([('active', '=', True)])
for config in configs:
    config.action_sync_contacts()
        </field>
        <field name="interval_number">15</field>
        <field name="interval_type">minutes</field>
        <field name="active">True</field>
        <field name="user_id" ref="base.user_root"/>
    </record>

    <record id="ir_cron_brevo_list_sync" model="ir.cron">
        <field name="name">Brevo List Sync</field>
        <field name="model_id" ref="model_brevo_config"/>
        <field name="state">code</field>
        <field name="code">
# Get all active configurations and trigger list sync
configs = env['brevo.config'].search([('active', '=', True)])
for config in configs:
    config.action_sync_lists()
        </field>
        <field name="interval_number">30</field>
        <field name="interval_type">minutes</field>
        <field name="active">True</field>
        <field name="user_id" ref="base.user_root"/>
    </record>

    <record id="ir_cron_brevo_cleanup_logs" model="ir.cron">
        <field name="name">Brevo Log Cleanup</field>
        <field name="model_id" ref="model_brevo_sync_log"/>
        <field name="state">code</field>
        <field name="code">
# Clean up old sync logs
logs = env['brevo.sync.log']
logs.action_cleanup_old_logs()
        </field>
        <field name="interval_number">1</field>
        <field name="interval_type">days</field>
        <field name="active">True</field>
        <field name="user_id" ref="base.user_root"/>
    </record>

    <record id="ir_cron_brevo_tag_sync" model="ir.cron">
        <field name="name">Brevo Tag Sync</field>
        <field name="model_id" ref="model_brevo_config"/>
        <field name="state">code</field>
        <field name="code">
# Get all active configurations and trigger tag sync
configs = env['brevo.config'].search([('active', '=', True)])
for config in configs:
    config.action_sync_tags()
        </field>
        <field name="interval_number">60</field>
        <field name="interval_type">minutes</field>
        <field name="active">True</field>
        <field name="user_id" ref="base.user_root"/>
    </record>

    <record id="ir_cron_brevo_dynamic_fields_sync" model="ir.cron">
        <field name="name">Brevo Dynamic Fields Sync</field>
        <field name="model_id" ref="model_brevo_config"/>
        <field name="state">code</field>
        <field name="code">
# Get all active configurations and trigger dynamic fields sync
configs = env['brevo.config'].search([('active', '=', True)])
for config in configs:
    config.action_sync_dynamic_fields()
        </field>
        <field name="interval_number">120</field>
        <field name="interval_type">minutes</field>
        <field name="active">True</field>
        <field name="user_id" ref="base.user_root"/>
    </record>

</odoo>
